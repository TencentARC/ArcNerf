# The NeRF model with embedder from instant-ngp

model:
    type: NeRF
    obj_bound:                          # use object bound for fg model
        volume:                         # volume bound or sphere bound
            n_grid: 128                 # resolution of the volume
            side: 2.0                   # size of volume
        epoch_optim: 16                 # epoch pruning the volume
        epoch_optim_warmup: 256         # warmup period for pruning
        ray_sample_acc: True            # sampling in the pruning voxel instead of all
        ray_sample_fix_step: True       # fix step sampling
        near_distance: 0.2              # near distance
        opa_thres: 0.01                 # threshold to filter voxel
        bkg_color: [0.0, 0.0, 0.0]      # default bkg color for empty ray
        depth_far: 10.0                 # default zvals for empty ray
        log_max_allowance: 18           # only used for dynamic batch_size, 1 << 18 = 4096*64
    rays:
        n_sample: 1024                # n_sample for zvals sampling
        n_importance: 0               # do not use hierarchical sampling
        inverse_linear: False         # inverse_linear make zvals close to near
        perturb: True                 # perturb zvals interval
        add_inf_z: False              # Add inf zval for ray marching
        noise_std: 1.0                # noise for sigma in training
        white_bkg: False              # cast the background as white
    chunk_rays: 32768                 # each chunk to process 1024*32(ray), enough for 32 GB
    chunk_pts: 1048576                # each chunk to progress 4096*256(pts), for model forward
    geometry:
        type: FusedMLPGeoNet          # fused mlp
        W: 64                         # linear hidden neuron
        D: 1                          # num of linear, not include final
        skips: []                     # pos to add input embedding
        encoder:                      # encoder
            type: HashGridEmbedder    # type of encoder
            input_dim: 3              # xyz input channel
            include_input: False      # do not include input
            side: 2.0                 # bounding volume
            n_freqs: 0                # this one controls the geo init
            n_levels: 16              # num of levels for multi-res hashing, increase from base_res to max_res
            n_feat_per_entry: 2       # num of feat in each entry
            hashmap_size: 19          # 2**hashmap_size for hashmap size in each bin
            base_res: 16              # base res on each xyz dim
            max_res: 2048             # last res
            backend: tcnn             # backend: support torch/cuda/tcnn
        W_feat: 16                    # extra feature output
        out_act_cfg:
            type: TruncExp            # follow official implementation
    radiance:
        type: FusedMLPRadianceNet     # fused mlp
        mode: 'fv'                    # view_dir and feature only. The order affect fusemlp result
        W: 64                         # linear hidden dim
        D: 2                          # num of linear, not include final
        encoder:
            view:
                type: SHEmbedder      # type of encoder
                include_input: False  # do not include input
                input_dim: 3          # view input channel
                n_freqs: 4            # view embed freq, output is degree**2
                backend: tcnn         # backend: support torch/cuda/tcnn
        W_feat_in: 16                 # dim for feature from geometry
